======================================================================================
#=================================== RELAT√ìRIO ========================================
#======================================================================================

Problema:

1 - Na fun√ß√£o resizeArray, o Dptr n√£o atualizava o array original antes de retornar, e n√£o liberava o espa√ßo ocupado por dPtr.
2 - Durante execu√ß√£o do Valgrind, foi identificada libera√ß√£o de espa√ßo desnecess√°ria em uma linha da fun√ß√£o main.

Solu√ß√£o:

O comando de limpeza free(array->data); foi removido e a fun√ß√£o resize array foi corrigida garantindo seu funcionamento desejado e politicas de mem√≥ria corretas.

#======================================================================================
#===================================== SCRIPT =========================================
#======================================================================================

Script started on 2024-11-19 22:23:18-03:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="108" LINES="7"]
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ exitmake run SRC=src/c4.c[1P.c6.c
[?2004l
gcc -g -Wall -Wextra -Iinclude -c src/c6.c -o obj/c6.o
gcc -g -Wall -Wextra -Iinclude -o bin/c6 obj/c6.o
./bin/c6
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ make run SRC=src/c6.cexit[Kmake run SRC=src/c4.c[4@memtest[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P.c6.c
[?2004l
valgrind --leak-check=full ./bin/c6
==14635== Memcheck, a memory error detector
==14635== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==14635== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==14635== Command: ./bin/c6
==14635== 
==14635== Invalid free() / delete / delete[] / realloc()
==14635==    at 0x4887B40: free (vg_replace_malloc.c:872)
==14635==    by 0x10888F: main (c6.c:22)
==14635==  Address 0x4a6f090 is 0 bytes inside a block of size 40 free'd
==14635==    at 0x488A1C4: realloc (vg_replace_malloc.c:1437)
==14635==    by 0x108837: resizeArray (c6.c:12)
==14635==    by 0x10887F: main (c6.c:20)
==14635==  Block was alloc'd at
==14635==    at 0x4889F94: calloc (vg_replace_malloc.c:1328)
==14635==    by 0x10886B: main (c6.c:19)
==14635== 
==14635== 
==14635== HEAP SUMMARY:
==14635==     in use at exit: 60 bytes in 1 blocks
==14635==   total heap usage: 3 allocs, 3 frees, 116 bytes allocated
==14635== 
==14635== 60 bytes in 1 blocks are definitely lost in loss record 1 of 1
==14635==    at 0x488A1C4: realloc (vg_replace_malloc.c:1437)
==14635==    by 0x108837: resizeArray (c6.c:12)
==14635==    by 0x10887F: main (c6.c:20)
==14635== 
==14635== LEAK SUMMARY:
==14635==    definitely lost: 60 bytes in 1 blocks
==14635==    indirectly lost: 0 bytes in 0 blocks
==14635==      possibly lost: 0 bytes in 0 blocks
==14635==    still reachable: 0 bytes in 0 blocks
==14635==         suppressed: 0 bytes in 0 blocks
==14635== 
==14635== For lists of detected and suppressed errors, rerun with: -s
==14635== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ make memtest SRC=src/c6.c
[?2004l
gcc -g -Wall -Wextra -Iinclude -c src/c6.c -o obj/c6.o
gcc -g -Wall -Wextra -Iinclude -o bin/c6 obj/c6.o
valgrind --leak-check=full ./bin/c6
==14684== Memcheck, a memory error detector
==14684== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==14684== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==14684== Command: ./bin/c6
==14684== 
==14684== Invalid free() / delete / delete[] / realloc()
==14684==    at 0x4887B40: free (vg_replace_malloc.c:872)
==14684==    by 0x1088A3: main (c6.c:23)
==14684==  Address 0x4a6f100 is 0 bytes inside a block of size 60 free'd
==14684==    at 0x4887B40: free (vg_replace_malloc.c:872)
==14684==    by 0x10884F: resizeArray (c6.c:14)
==14684==    by 0x108893: main (c6.c:21)
==14684==  Block was alloc'd at
==14684==    at 0x488A1C4: realloc (vg_replace_malloc.c:1437)
==14684==    by 0x108837: resizeArray (c6.c:12)
==14684==    by 0x108893: main (c6.c:21)
==14684== 
==14684== 
==14684== HEAP SUMMARY:
==14684==     in use at exit: 0 bytes in 0 blocks
==14684==   total heap usage: 3 allocs, 4 frees, 116 bytes allocated
==14684== 
==14684== All heap blocks were freed -- no leaks are possible
==14684== 
==14684== For lists of detected and suppressed errors, rerun with: -s
==14684== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ make memtest SRC=src/c6.c
[?2004l
gcc -g -Wall -Wextra -Iinclude -c src/c6.c -o obj/c6.o
gcc -g -Wall -Wextra -Iinclude -o bin/c6 obj/c6.o
valgrind --leak-check=full ./bin/c6
==14741== Memcheck, a memory error detector
==14741== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==14741== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==14741== Command: ./bin/c6
==14741== 
==14741== 
==14741== HEAP SUMMARY:
==14741==     in use at exit: 0 bytes in 0 blocks
==14741==   total heap usage: 3 allocs, 3 frees, 116 bytes allocated
==14741== 
==14741== All heap blocks were freed -- no leaks are possible
==14741== 
==14741== For lists of detected and suppressed errors, rerun with: -s
==14741== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ exit
[?2004l
exit

Script done on 2024-11-19 22:25:09-03:00 [COMMAND_EXIT_CODE="0"]
