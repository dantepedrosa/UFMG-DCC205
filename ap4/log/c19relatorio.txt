#======================================================================================
#=================================== RELATÃ“RIO ========================================
#======================================================================================

Problema:

Foi identificado a utilizaÃ§Ã£o da variÃ¡vel temporÃ¡ria buf sem sua declaraÃ§Ã£o anterior, que acabou gerando erros de compilaÃ§Ã£o e memÃ³ria (valgrind). 

SoluÃ§Ã£o:

Buf foi inicializada como alocaÃ§Ã£o dinÃ¢mica antes de sua utilizaÃ§Ã£o na funÃ§Ã£o printSum e teve seu espaÃ§o liberado ao final da funÃ§Ã£o.

#======================================================================================
#===================================== SCRIPT =========================================
#======================================================================================

Script started on 2024-11-19 21:49:42-03:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="77" LINES="6"]
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ exitmake memtest SRC=src/c16.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[Cdebug SRC=src/[C[2P16.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [9P./bin/c16

[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmake debug SRC=src/c16.c
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[C[C[C[C[1P.c9.c
[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C SRC=src/c[1P19.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[C[C[C[C[C SRC=src/c1[1P9.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[C[C[C[C SRC=src/c19[1P.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[C[C[C SRC=src/c19.[1Pc[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[C[C SRC=src/c19.c[K[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[Cr SRC=src/c19.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[C[Cu SRC=src/c19.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[C[C[Cn SRC=src/c19.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[C[C[C[C


[?2004l
gcc -g -Wall -Wextra -Iinclude -c src/c19.c -o obj/c19.o
[01m[Ksrc/c19.c:[m[K In function â€˜[01m[KprintSum[m[Kâ€™:
[01m[Ksrc/c19.c:20:13:[m[K [01;35m[Kwarning: [m[Kthe comparison will always evaluate as â€˜[01m[Ktrue[m[Kâ€™ for the address of â€˜[01m[Kline[m[Kâ€™ will never be NULL [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Waddress-Waddress]8;;[m[K]
   20 |     if(line [01;35m[K!=[m[K NULL)
      |             [01;35m[K^~[m[K
[01m[Ksrc/c19.c:17:10:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kline[m[Kâ€™ declared here
   17 |     char [01;36m[Kline[m[K[10];
      |          [01;36m[K^~~~[m[K
gcc -g -Wall -Wextra -Iinclude -o bin/c19 obj/c19.o
./bin/c19
enter a number:
4
make: *** [Makefile:40: run] Segmentation fault (core dumped)
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ make run SRC=src/c19.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ exit[K

[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmake memtest SRC=src/c16.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[Cdebug SRC=src/[C[2P16.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[Cmemtest SRC=sr[C/c16.c[1P.c9.c
[?2004l
gcc -g -Wall -Wextra -Iinclude -c src/c19.c -o obj/c19.o
[01m[Ksrc/c19.c:[m[K In function â€˜[01m[KprintSum[m[Kâ€™:
[01m[Ksrc/c19.c:20:13:[m[K [01;35m[Kwarning: [m[Kthe comparison will always evaluate as â€˜[01m[Ktrue[m[Kâ€™ for the address of â€˜[01m[Kline[m[Kâ€™ will never be NULL [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Waddress-Waddress]8;;[m[K]
   20 |     if(line [01;35m[K!=[m[K NULL)
      |             [01;35m[K^~[m[K
[01m[Ksrc/c19.c:17:10:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kline[m[Kâ€™ declared here
   17 |     char [01;36m[Kline[m[K[10];
      |          [01;36m[K^~~~[m[K
gcc -g -Wall -Wextra -Iinclude -o bin/c19 obj/c19.o
valgrind --leak-check=full ./bin/c19
==13017== Memcheck, a memory error detector
==13017== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==13017== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==13017== Command: ./bin/c19
==13017== 
enter a number:
4
==13017== Invalid write of size 1
==13017==    at 0x4939F88: _IO_str_overflow (strops.c:133)
==13017==    by 0x4938A7B: _IO_default_xsputn (genops.c:399)
==13017==    by 0x4938A7B: _IO_default_xsputn (genops.c:370)
==13017==    by 0x491518F: outstring_func (vfprintf-internal.c:239)
==13017==    by 0x491518F: __vfprintf_internal (vfprintf-internal.c:767)
==13017==    by 0x492D317: __vsprintf_internal (iovsprintf.c:96)
==13017==    by 0x491221B: sprintf (sprintf.c:30)
==13017==    by 0x108997: printSum (c19.c:22)
==13017==    by 0x1089C3: main (c19.c:28)
==13017==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==13017== 
==13017== 
==13017== Process terminating with default action of signal 11 (SIGSEGV)
==13017==  Access not within mapped region at address 0x0
==13017==    at 0x4939F88: _IO_str_overflow (strops.c:133)
==13017==    by 0x4938A7B: _IO_default_xsputn (genops.c:399)
==13017==    by 0x4938A7B: _IO_default_xsputn (genops.c:370)
==13017==    by 0x491518F: outstring_func (vfprintf-internal.c:239)
==13017==    by 0x491518F: __vfprintf_internal (vfprintf-internal.c:767)
==13017==    by 0x492D317: __vsprintf_internal (iovsprintf.c:96)
==13017==    by 0x491221B: sprintf (sprintf.c:30)
==13017==    by 0x108997: printSum (c19.c:22)
==13017==    by 0x1089C3: main (c19.c:28)
==13017==  If you believe this happened as a result of a stack
==13017==  overflow in your program's main thread (unlikely but
==13017==  possible), you can try to increase the size of the
==13017==  main thread stack using the --main-stacksize= flag.
==13017==  The main thread stack size used in this run was 8388608.
==13017== 
==13017== HEAP SUMMARY:
==13017==     in use at exit: 2,048 bytes in 2 blocks
==13017==   total heap usage: 2 allocs, 0 frees, 2,048 bytes allocated
==13017== 
==13017== LEAK SUMMARY:
==13017==    definitely lost: 0 bytes in 0 blocks
==13017==    indirectly lost: 0 bytes in 0 blocks
==13017==      possibly lost: 0 bytes in 0 blocks
==13017==    still reachable: 2,048 bytes in 2 blocks
==13017==         suppressed: 0 bytes in 0 blocks
==13017== Reachable blocks (those to which a pointer was found) are not shown.
==13017== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13017== 
==13017== For lists of detected and suppressed errors, rerun with: -s
==13017== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
make: *** [Makefile:43: memtest] Segmentation fault (core dumped)
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ make memtest SRC=src/c19.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[Crun SRC=src/c1[4P9.c
[?2004l
gcc -g -Wall -Wextra -Iinclude -c src/c19.c -o obj/c19.o
[01m[Ksrc/c19.c:[m[K In function â€˜[01m[KprintSum[m[Kâ€™:
[01m[Ksrc/c19.c:21:13:[m[K [01;35m[Kwarning: [m[Kthe comparison will always evaluate as â€˜[01m[Ktrue[m[Kâ€™ for the address of â€˜[01m[Kline[m[Kâ€™ will never be NULL [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Waddress-Waddress]8;;[m[K]
   21 |     if(line [01;35m[K!=[m[K NULL)
      |             [01;35m[K^~[m[K
[01m[Ksrc/c19.c:17:10:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kline[m[Kâ€™ declared here
   17 |     char [01;36m[Kline[m[K[10];
      |          [01;36m[K^~~~[m[K
gcc -g -Wall -Wextra -Iinclude -o bin/c19 obj/c19.o
./bin/c19
enter a number:
4
sum=10
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ make run SRC=src/c19.c
[?2004l
./bin/c19
enter a number:
10
sum=55
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ make run SRC=src/c19.c[A
]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ [C[C[C[C[Cmemtest SRC=src/c19.c
[?2004l
valgrind --leak-check=full ./bin/c19
==13379== Memcheck, a memory error detector
==13379== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==13379== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==13379== Command: ./bin/c19
==13379== 
enter a number:
5
sum=15
==13379== 
==13379== HEAP SUMMARY:
==13379==     in use at exit: 0 bytes in 0 blocks
==13379==   total heap usage: 3 allocs, 3 frees, 2,098 bytes allocated
==13379== 
==13379== All heap blocks were freed -- no leaks are possible
==13379== 
==13379== For lists of detected and suppressed errors, rerun with: -s
==13379== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;dante@penguin: ~/UFMG/UFMG-DCC205/ap4 - debug and refactor[01;32mdante@penguin[00m:[01;34m~/UFMG/UFMG-DCC205/ap4 - debug and refactor[00m$ exit
[?2004l
exit

Script done on 2024-11-19 21:59:33-03:00 [COMMAND_EXIT_CODE="0"]
